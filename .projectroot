<!--
 vim: ft=markdown:
-->

# django-test-1902

## Project docs

- `README.md`
- `TODO.md`
- `CHANGELOG.md`

## Config files

- `package.json`
- `django_project/settings.py`
- ~~`gulpfile.js`~~
- `.bemrc.js`
- `config-overrides.js`
- `jest.config.js`
- `.lvimrc`
- `tsconfig.json` (set/reset `noUnusedLocals`, `noUnusedParameters` for production/development)
- `tslint.yaml`
- `.eslintrc.yml`
- '.stylelintrc.yml'
- `src/config/__css/config__css.js`
- `src/config/__site/config__site.js`
- `src/config/__pages/config__pages.js`
- `src/lib/core/ui.js`

## Module extensions

- `*.js,*.jsx,*.ts,*.tsx,*.css,*.styl,*.md,*.json,*.yaml,*.sh`

## Core components

- `src/components/layout/App/App.tsx`
- `src/components/layout/Main/Main.tsx`

## dev-data

- [Original app link](https://www.itu.int/en/itu-d/pages/publications.aspx)
- [Original task msg](https://mail.yandex.ru/?uid=814904&login=dmia#message/166070236259313985)

- [Dev-data repository](https://github.com/lilliputten/itu-library-1812-dev-data) (submodule'd to `.ev-data/`)
- `.dev-data/itu-d/apis/publications/all.json`
- `.dev-data/!Work/181230-data/README.md`

Single book entry data sample:

- `!Work/181230-single-item-data/item-data.yml`
- `!Work/181230-single-item-data/README.md`

## Core node modules

bem-react-core-3:

- `node_modules/@bem-react/classname/README.md`
- `node_modules/@bem-react/di/README.md`

- `node_modules/@bem-react/core/build/cjs/core.development.js`
- `node_modules/@bem-react/classname/build/cjs/classname.development.js`
- `node_modules/@bem-react/di/build/cjs/di.development.js`

## Verbose commands

- `node node_modules/tslint/lib/tslintCli.js --help`

## Tips

### Definitely Typed (R&D)

- https://stackoverflow.com/questions/42388217/having-error-module-name-resolves-to-an-untyped-module-at-when-writing-cu
- http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html
- http://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html
- http://blog.wolksoftware.com/contributing-to-definitelytyped

`tsconfig.json` (?):
```json
    "typeRoots" : [
      "./typings",
      "node_modules/@types"
    ],
```

Or (temp solution) use
```js
// @ts-ignore
```
before untyped import.

### Webpack default module index

- [javascript - Webpack: default file other than index.js - Stack Overflow](https://stackoverflow.com/questions/40782168/webpack-default-file-other-than-index-js)
- [NormalModuleReplacementPlugin](https://webpack.js.org/plugins/normal-module-replacement-plugin/)

```js
new webpack.NormalModuleReplacementPlugin(/modules\/(\w+)$/, (result) => {
    result.request += `/${result.request.split('/').pop()}.module.js`
}
```

### Material UI

- [Button React component - Material-UI](https://material-ui.com/demos/buttons/)
- [Material Design Icons](https://materialdesignicons.com/)
- [Icons - Material Design](https://material.io/tools/icons/?icon=undo&style=baseline)

### Typescript typings

```shell
npm i -D @types/react-router-dom
```

### 'value is never used' errors

For enabling/disabling errors/warnings `...is declared but its value is never
used...` set to true/false next strings in `tsconfig.json`:
```js
{
  // ...
  "noUnusedLocals": true,
  "noUnusedParameters": true,
  // ...
}
```
