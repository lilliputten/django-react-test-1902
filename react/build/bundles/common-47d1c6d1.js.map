{"version":3,"file":"common-47d1c6d1.js","sources":["webpack:///./react/src/components/layout/App/App.jsx","webpack:///./react/src/components/layout/App/App.pcss"],"sourcesContent":["/* eslint-disable no-debugger, no-console */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { /* BrowserRouter, */ Switch, NavLink as Link, Route } from 'react-router-dom';\nimport loadable from 'react-loadable';\n\nimport './App.pcss';\n\n// loading view\nconst LoadingComponent = ({ id }) => <div className=\"Loading\" id=\"{id}\">Loading {id}...</div>;\nLoadingComponent.propTypes = {\n  id: PropTypes.string,\n};\n\n// Routes...\n// TODO 2019.02.15, 03:34 -- Move route definitions to separated config using on both client and server?\nconst routesList = [\n  {\n    id: 'Home',\n    path: '/',\n    loader: () => import('../../pages/Home/Home'),\n  },\n  {\n    id: 'About',\n    path: '/About',\n    loader: () => import('../../pages/About/About'),\n  },\n  {\n    id: 'Contacts',\n    path: '/Contacts',\n    loader: () => import('../../pages/Contacts/Contacts'),\n  },\n];\n\nconst routes = routesList.map(({ id, path, loader }) => {\n  // const chunkPath = getChunkPath(id);\n  const loading = (<LoadingComponent id={id} />);\n  const route = {\n    id,\n    path,\n    content: loadable({\n      loading,\n      loader,\n    }),\n  };\n  console.log('App: route', id, ': ', route);\n  return route;\n});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      routes,\n    };\n  }\n\n  // /** componentWillMount ** {{{\n  //  */\n  // componentWillMount() {\n  //   console.log('App: componentWillMount');\n  //   // debugger;\n  // }/*}}}*/\n\n  /** render ** {{{\n   */\n  render() {\n    const { mode } = this.props;\n    const { routes } = this.state;\n    const routesMenu = [];\n    const routesContent = [];\n    routes.map(({id, path, content}) => {\n      routesMenu.push(<Link className=\"App-MenuItem\" activeClassName=\"active\" key={id} to={path}>{id}</Link>);\n      routesContent.push(<Route exact path={path} key={id} component={content} />);\n    });\n    return (\n      <div className=\"App\" id={mode}>\n        <div className=\"App-Menu\">\n          <span className=\"App-MenuLogo\" />\n          {routesMenu}\n        </div>\n        <div className=\"App-Page\">\n          <Switch>\n            {routesContent}\n          </Switch>\n        </div>\n        <div className=\"App-Info\">\n          App mode: {mode}\n        </div>\n      </div>\n    );\n  }/*}}}*/\n\n}\n\nApp.propTypes = {\n  mode: PropTypes.string.isRequired,\n};\n\nexport default App;\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrGA;;;;A","sourceRoot":""}